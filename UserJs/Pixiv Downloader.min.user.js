// ==UserScript==
// @name         Pixiv Downloader
// @namespace    http://tampermonkey.net/
// @version      2.3.0
// @description  Tải xuống hình ảnh và truyện tranh từ Pixiv
// @match        https://www.pixiv.net/en/artworks/*
// @match        https://www.pixiv.net/users/*
// @author       RenjiYuusei
// @license      GPL-3.0-only
// @icon         https://www.google.com/s2/favicons?sz=64&domain=pixiv.net
// @grant        GM_xmlhttpRequest
// @grant        GM_download
// @grant        GM_addStyle
// @grant        GM_getValue
// @grant        GM_setValue
// @grant        GM_registerMenuCommand
// @grant        GM_notification
// @require      https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js
// @run-at       document-end
// @connect      pixiv.net
// @connect      pximg.net
// @noframes
// @downloadURL https://github.com/RenjiYuusei/UserScript/raw/main/UserJs/Pixiv Downloader.user.js
// @updateURL https://github.com/RenjiYuusei/UserScript/raw/main/UserJs/Pixiv Downloader.meta.js
// ==/UserScript==
!function(){"use strict";const e=864e5,t=3e3,n=5,a=1e3,o=10,i=new Map;GM_addStyle('\n        .pd-container {\n            position: fixed;\n            bottom: 20px;\n            right: 20px;\n            z-index: 9999;\n            font-family: Arial, sans-serif;\n        }\n        .pd-status, .pd-progress {\n            background: rgba(33, 33, 33, 0.95);\n            color: white;\n            padding: 15px;\n            border-radius: 10px;\n            margin-top: 12px;\n            display: none;\n            box-shadow: 0 3px 8px rgba(0,0,0,0.3);\n        }\n        .pd-progress {\n            width: 300px;\n            height: 30px;\n            background: #444;\n            padding: 4px;\n        }\n        .pd-progress .progress-bar {\n            height: 100%;\n            background: linear-gradient(90deg, #2196F3, #00BCD4);\n            border-radius: 6px;\n            transition: width 0.4s ease;\n        }\n        .pd-batch-dialog {\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background: #2c2c2c;\n            color: #fff;\n            padding: 25px;\n            border-radius: 12px;\n            box-shadow: 0 4px 15px rgba(0,0,0,0.5);\n            z-index: 10000;\n            width: 600px;\n        }\n        .pd-batch-dialog h3 {\n            color: #fff;\n            margin-bottom: 15px;\n        }\n        .pd-batch-dialog p {\n            color: #ddd;\n            margin-bottom: 10px;\n        }\n        .pd-batch-dialog textarea {\n            width: 100%;\n            height: 250px;\n            margin: 12px 0;\n            padding: 10px;\n            border: 2px solid #444;\n            border-radius: 6px;\n            font-size: 14px;\n            background: #333;\n            color: #fff;\n        }\n        .pd-batch-dialog button {\n            padding: 10px 20px;\n            background: #2196F3;\n            color: white;\n            border: none;\n            border-radius: 6px;\n            cursor: pointer;\n            margin-right: 12px;\n            font-size: 14px;\n            transition: background 0.3s;\n        }\n        .pd-batch-dialog button:hover {\n            background: #1976D2;\n        }\n        .pd-settings-dialog {\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background: #2c2c2c;\n            color: #fff;\n            padding: 25px;\n            border-radius: 12px;\n            box-shadow: 0 4px 15px rgba(0,0,0,0.5);\n            z-index: 10000;\n            width: 500px;\n        }\n        .pd-settings-dialog h3 {\n            color: #fff;\n            margin-bottom: 15px;\n        }\n        .pd-settings-item {\n            margin: 15px 0;\n        }\n        .pd-settings-item label {\n            display: block;\n            margin-bottom: 5px;\n            font-weight: bold;\n            color: #fff;\n        }\n        .pd-settings-item small {\n            color: #aaa;\n            display: block;\n            margin-top: 5px;\n        }\n        .pd-settings-item input[type="text"],\n        .pd-settings-item select {\n            width: 100%;\n            padding: 8px;\n            border: 2px solid #444;\n            border-radius: 6px;\n            background: #333;\n            color: #fff;\n        }\n        .pd-settings-item select option {\n            background: #333;\n            color: #fff;\n        }\n    ');const s={sleep:e=>new Promise((t=>setTimeout(t,e))),retry:async(e,t=n)=>{for(let n=0;n<t;n++)try{return await e()}catch(e){if(n===t-1)throw e;await s.sleep(a*(n+1))}},fetch:async(t,n={})=>{const a=i.get(t);return a?.timestamp>Date.now()-e?a.data:new Promise(((e,a)=>{GM_xmlhttpRequest({method:n.method||"GET",url:t,responseType:n.responseType||"json",headers:{Referer:"https://www.pixiv.net/",Accept:"application/json","X-Requested-With":"XMLHttpRequest","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"},withCredentials:!1,onload:o=>{if(200===o.status){const a="blob"===n.responseType?o.response:JSON.parse(o.responseText);i.set(t,{data:a,timestamp:Date.now()}),e(a)}else a(new Error(`HTTP ${o.status}: ${o.statusText}`))},onerror:a,ontimeout:()=>a(new Error("Request timed out")),timeout:3e4})}))},extractId:e=>{const t=e.match(/artworks\/(\d+)/)||e.match(/^(\d+)$/);return t?t[1]:null},ui:{container:null,init:()=>{s.ui.container=document.createElement("div"),s.ui.container.className="pd-container",document.body.appendChild(s.ui.container),s.ui.status.init(),s.ui.progress.init()},notify:(e,n="info")=>GM_notification({text:e,title:"Pixiv Downloader",timeout:t}),status:{el:null,init:()=>{s.ui.status.el=document.createElement("div"),s.ui.status.el.className="pd-status",s.ui.container.appendChild(s.ui.status.el)},show:e=>{s.ui.status.el.textContent=e,s.ui.status.el.style.display="block"},hide:()=>s.ui.status.el.style.display="none"},progress:{el:null,bar:null,init:()=>{const e=document.createElement("div");e.className="pd-progress";const t=document.createElement("div");t.className="progress-bar",e.appendChild(t),s.ui.container.appendChild(e),s.ui.progress.el=e,s.ui.progress.bar=t},update:e=>{s.ui.progress.el.style.display="block",s.ui.progress.bar.style.width=`${e}%`},hide:()=>s.ui.progress.el.style.display="none"},showSettingsDialog:()=>{const e=document.createElement("div");e.className="pd-settings-dialog",e.innerHTML=`\n                    <h3>Settings</h3>\n                    <div class="pd-settings-item">\n                        <label>Filename Format:</label>\n                        <input type="text" id="filenameFormat" value="${GM_getValue("filenameFormat","{artist} - {title} ({id})_{idx}")}">\n                        <small>Available tags: {artist}, {title}, {id}, {idx}, {ext}</small>\n                    </div>\n                    <div>\n                        <button class="save">Save</button>\n                        <button class="cancel">Cancel</button>\n                    </div>\n                `,document.body.appendChild(e);const t=e.querySelector(".save"),n=e.querySelector(".cancel");t.addEventListener("click",(()=>{const t=e.querySelector("#filenameFormat").value;GM_setValue("filenameFormat",t),s.ui.notify("Settings saved!"),e.remove()})),n.addEventListener("click",(()=>e.remove()))},showBatchDialog:()=>{const e=document.createElement("div");e.className="pd-batch-dialog",e.innerHTML='\n                    <h3>Batch Download</h3>\n                    <p>Enter the ID or URL of the artwork (one link per line):</p>\n                    <textarea placeholder="Example:&#13;&#10;8229272&#13;&#10;https://www.pixiv.net/en/artworks/12345678"></textarea>\n                    <div>\n                        <button class="download">Download</button>\n                        <button class="cancel">Cancel</button>\n                    </div>\n                    <div class="pd-batch-status"></div>\n                ',document.body.appendChild(e);const t=e.querySelector("textarea"),n=e.querySelector(".download"),a=e.querySelector(".cancel");n.addEventListener("click",(async()=>{const n=t.value.split("\n").filter(Boolean).map((e=>s.extractId(e.trim()))).filter(Boolean);0!==n.length?(e.remove(),await r.batchDownloadByIds(n)):s.ui.notify("Invalid ID!","error")})),a.addEventListener("click",(()=>e.remove()))}}},r={getIllustData:async e=>(await s.retry((()=>s.fetch(`https://www.pixiv.net/ajax/illust/${e}`)))).body,getFilename(e,t=0){const n=e=>e.replace(/[<>:"/\\|?*]/g,"_").trim();return GM_getValue("filenameFormat","{artist} - {title} ({id})_{idx}").replace("{artist}",n(e.userName)).replace("{title}",n(e.title)).replace("{id}",e.id).replace("{idx}",String(t).padStart(3,"0")).replace("{ext}",e.urls.original.split(".").pop())},async downloadSingle(e,t){const n=await s.retry((()=>s.fetch(e,{responseType:"blob"})));saveAs(n,t)},downloadChunk:async e=>Promise.all(e.map((e=>e()))),async download(e){let t=0;const n=e.pageCount,a=Array.from({length:n},((a,o)=>async()=>{const a=e.urls.original.replace("_p0",`_p${o}`),i=await s.retry((()=>s.fetch(a,{responseType:"blob"})));t++,s.ui.status.show(`Downloading: ${t}/${n}`),s.ui.progress.update(t/n*100);const d=`${r.getFilename(e,o)}`;saveAs(i,d)}));for(let e=0;e<a.length;e+=o){const t=a.slice(e,e+o);await r.downloadChunk(t).catch((e=>{throw s.ui.notify(`Error: ${e.message}`,"error"),e})),await s.sleep(500)}s.ui.notify("Download completed!","success"),s.ui.status.hide(),s.ui.progress.hide()},async batchDownloadByIds(e){let t=0;const n=e.length,a=[];s.ui.status.show(`Batch download started: 0/${n}`);for(const o of e){try{const e=await r.getIllustData(o);for(let t=0;t<e.pageCount;t++){const n=e.urls.original.replace("_p0",`_p${t}`),a=await s.retry((()=>s.fetch(n,{responseType:"blob"}))),o=`${r.getFilename(e,t)}`;saveAs(a,o)}t++,s.ui.status.show(`Batch download progress: ${t}/${n}`)}catch(e){console.error(`Error downloading ${o}:`,e),s.ui.notify(`Error downloading artwork ${o}: ${e.message}`,"error"),a.push(o)}await s.sleep(1e3)}a.length>0&&(console.log("Failed downloads:",a),s.ui.notify("Some downloads failed. Check console for details.","warning")),s.ui.notify(`Batch download completed! Downloaded ${t} artworks`,"success"),s.ui.status.hide()},init(){s.ui.init(),GM_registerMenuCommand("Download Artwork",(async()=>{try{s.ui.status.show("Loading data...");const e=await r.getIllustData(location.pathname.split("/").pop());await r.download(e)}catch(e){s.ui.notify(`Error: ${e.message}`,"error"),s.ui.status.hide(),s.ui.progress.hide()}})),GM_registerMenuCommand("Batch Download",(()=>{s.ui.showBatchDialog()})),GM_registerMenuCommand("Settings",(()=>{s.ui.showSettingsDialog()}))}};"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>r.init())):r.init()}();
